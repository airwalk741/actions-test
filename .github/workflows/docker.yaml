# name: ci-cd-pipeline
# on:
#   push:
#     branches:
#       - master
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     environment: Oracle
#     env:
#       CI: false
#     strategy:
#       matrix:
#         node-version: [16.x]
#     steps:
#       - uses: actions/checkout@v3

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#       - name: Install modules
#         run: npm install

#       - name: Build project
#         run: npm run build

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v2
#         with:
#           name: node-app
#           path: .

#   build-image:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: create remote directory # ec2 서버에 디렉토리를 하나 만들어준다.
#         uses: appleboy/ssh-action@master
#         with:
#           HOST: ${{ secrets.HOST }}
#           USERNAME: ${{ secrets.USERNAME }}
#           KEY: ${{ secrets.SSH_KEY }}
#           script: mkdir -p /home/ubuntu/srv/ubuntu

#   cd-pipeline:
#     needs: build-image
#     name: continuos deploy
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: copy file via ssh password
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ec2-user
#           key: ${{ secrets.PRIVATE_KEY }}
#           port: 22
#           source: "docker-compose.yaml"
#           target: "/home/ec2-user/"
#       - name: executing remote ssh commands using password
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ec2-user
#           key: ${{ secrets.PRIVATE_KEY }}
#           port: 22
#           script: "docker-compose pull && docker-compose up -d"
